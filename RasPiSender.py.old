##from audiolazy import *
import wave
import pyaudio
import RPi.GPIO as GPIO

pin = 27

GPIO.setmode(GPIO.BCM)
GPIO.setup(pin, GPIO.OUT)

wr = wave.open('flesh_wound.wav','rb')

nchannels, sampwidth, framerate, nframes, comptype, compname =  wr.getparams()

#print nframes

if nchannels == 1:
	frames = wr.readframes(wr.getnframes())
else:
	frames = 0
#for i in range(len(frames)):
#print (frames[0::],0)
# print list(frames)
longByte = ''
new_frames = ''
byteList = []
print wr.getnframes()
print len(frames)
for s1 in list(frames):
	longByte += ''.join('{0:08b}'.format(ord(x), 'b') for x in s1)
	# i += 1

	# if (i%128 == 0):
	# 	byteList.append(longByte)
	# 	longByte = ''
	# print byte
if(longByte!=''):
	byteList.append(longByte)

for i in longByte:
	if i == '1':
		GPIO.output(pin, GPIO.HIGH)
	elif i == '0':
		GPIO.output(pin, GPIO.LOW)

GPIO.output(pin, GPIO.LOW)

# j = 8;
# for i in range(len(longByte)):
# 	if (j - 9 < i):
# 		new_frames += chr(int(longByte[i:j],2))
# 		j+=8

# j=8
# old_frames = ''
# f = open( 'sent_bitstream.txt', 'r' )
# string = f.read()
# for i in range(len(string)):
# 	if (j - 9 < i):
# 		old_frames += (chr(int(string[i:j],2)))
# 		j+=8
# f.close()

# print len(old_frames)
# fail = False
# for i in range(len(list(old_frames))): 
# 	if old_frames[i] != new_frames[i]:
# 		print 'FAILED TEST'
# 		print old_frames[i]
# 		print new_frames[i]
# 		print ''
# 		fail=True
# if (fail):
# 	print 'Recieved and sent bitstreams are different. Check above for error location.'
# else:
# 	print 'ALL BITS EQUAL'
# 	print 'Be happy cause it worked...'

# ww = wave.open('mono.wav','wb')
# ww.setparams((1,sampwidth,framerate,nframes,comptype,compname))

# ww.writeframes(new_frames)